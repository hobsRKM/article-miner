'use strict';

exports.__esModule = true;
exports.default = isReferenced;

var _babelTypes = require('babel-types');

var t = _interopRequireWildcard(_babelTypes);

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }

function isReferenced(node, parent) {
  switch (parent.type) {
    // yes: { [NODE]: '' }
    // yes: { NODE }
    // no: { NODE: '' }
    case 'ObjectProperty':
      return parent.value === node || parent.computed;

    // no: break NODE;
    // no: continue NODE;
    case 'BreakStatement':
    case 'ContinueStatement':
      return false;

    // yes: left = NODE;
    // yes: NODE = right;
    case 'AssignmentExpression':
      return true;
  }

  return t.isReferenced(node, parent);
}
module.exports = exports['default'];